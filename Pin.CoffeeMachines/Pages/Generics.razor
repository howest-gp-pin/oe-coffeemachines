@page "/generics"
@using Pin.CoffeeMachines.Components
@inject ICrudService<CoffeeMachine> coffeeMachineService;
@inject IJSRuntime jsRuntime;
<h3>Generics</h3>

<MachineList TModel="CoffeeMachine" Machines="coffeeMachines" Title="Coffee machines">
    <ListInfo>
        <p>This is a list of all the Howest coffee machines.</p>
    </ListInfo>
</MachineList>
<MachineList TModel="SodaMachine" Machines="sodaMachines" Title="Soda machines">
    <ListInfo>
        <p>There is a list of the follow suppliers:</p>
        <img width="100" src="https://upload.wikimedia.org/wikipedia/commons/6/68/Pepsi_2023.svg" />
        <img width="100" src="https://upload.wikimedia.org/wikipedia/commons/c/ce/Coca-Cola_logo.svg" />
    </ListInfo>
</MachineList>

<canvas id="myChart"></canvas>

@if(!chartVisible)
{
    <button @onclick="DisplayChart">Display chart</button>
}

@code {
    private CoffeeMachine[] coffeeMachines = new CoffeeMachine[0];
    private SodaMachine[] sodaMachines = new SodaMachine[0];
    private bool chartVisible = false;
    protected async override Task OnInitializedAsync()
    {
        coffeeMachines = (await coffeeMachineService.GetAll()).ToArray();

        var inmemorySodaMachines = new SodaMachine[]
        {
            new SodaMachine { Id = Guid.NewGuid(), Color = "Blue" , Description = "Pepsi machine", NumberOfRacks = 4, TimesDefected = 0 },
            new SodaMachine { Id = Guid.NewGuid(), Color = "Red" , Description = "Coca-cola machine", NumberOfRacks = 5, TimesDefected = 1 }
        };

        sodaMachines = inmemorySodaMachines;

    }

    private async void DisplayChart()
    {
        chartVisible = true;
        var machineTypes = new[] { "coffee", "soda" };
        var counts = new[] { coffeeMachines.Length, sodaMachines.Length };
        await jsRuntime.InvokeVoidAsync("displayChart", (object)machineTypes, (object)counts);
    }

}
